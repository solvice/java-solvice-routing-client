/*
 * OnRoute API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.solvice.routing.api.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.solvice.routing.api.client.model.Solver;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * SolveRequest
 */

public class SolveRequest {

  @SerializedName("hook")
  private String hook = null;

  @SerializedName("solver")
  private Solver solver = null;
  public SolveRequest hook(String hook) {
    this.hook = hook;
    return this;
  }

  

  /**
  * Webhook endpoint to receive POST request with the id.
  * @return hook
  **/
  @Schema(example = "http://my-backend.com/hook-endpoint", description = "Webhook endpoint to receive POST request with the id.")
  public String getHook() {
    return hook;
  }
  public void setHook(String hook) {
    this.hook = hook;
  }
  public SolveRequest solver(Solver solver) {
    this.solver = solver;
    return this;
  }

  

  /**
  * Get solver
  * @return solver
  **/
  @Schema(required = true, description = "")
  public Solver getSolver() {
    return solver;
  }
  public void setSolver(Solver solver) {
    this.solver = solver;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SolveRequest solveRequest = (SolveRequest) o;
    return Objects.equals(this.hook, solveRequest.hook) &&
        Objects.equals(this.solver, solveRequest.solver);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(hook, solver);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SolveRequest {\n");
    
    sb.append("    hook: ").append(toIndentedString(hook)).append("\n");
    sb.append("    solver: ").append(toIndentedString(solver)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
