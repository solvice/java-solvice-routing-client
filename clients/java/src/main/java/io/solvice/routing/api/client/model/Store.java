/*
 * OnRoute API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.solvice.routing.api.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.solvice.routing.api.client.model.Location;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * Store
 */

public class Store {

  @SerializedName("name")
  private String name = null;

  @SerializedName("location")
  private Location location = null;

  @SerializedName("frequency")
  private Integer frequency = null;

  @SerializedName("potential")
  private Integer potential = null;

  @SerializedName("language")
  private String language = null;

  @SerializedName("duration")
  private Integer duration = null;
  public Store name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(example = "store1", required = true, description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public Store location(Location location) {
    this.location = location;
    return this;
  }

  

  /**
  * Get location
  * @return location
  **/
  @Schema(required = true, description = "")
  public Location getLocation() {
    return location;
  }
  public void setLocation(Location location) {
    this.location = location;
  }
  public Store frequency(Integer frequency) {
    this.frequency = frequency;
    return this;
  }

  

  /**
  * Visit frequency
  * @return frequency
  **/
  @Schema(example = "3", description = "Visit frequency")
  public Integer getFrequency() {
    return frequency;
  }
  public void setFrequency(Integer frequency) {
    this.frequency = frequency;
  }
  public Store potential(Integer potential) {
    this.potential = potential;
    return this;
  }

  

  /**
  * Get potential
  * @return potential
  **/
  @Schema(example = "5000", description = "")
  public Integer getPotential() {
    return potential;
  }
  public void setPotential(Integer potential) {
    this.potential = potential;
  }
  public Store language(String language) {
    this.language = language;
    return this;
  }

  

  /**
  * Get language
  * @return language
  **/
  @Schema(example = "NL", description = "")
  public String getLanguage() {
    return language;
  }
  public void setLanguage(String language) {
    this.language = language;
  }
  public Store duration(Integer duration) {
    this.duration = duration;
    return this;
  }

  

  /**
  * Get duration
  * @return duration
  **/
  @Schema(example = "15", description = "")
  public Integer getDuration() {
    return duration;
  }
  public void setDuration(Integer duration) {
    this.duration = duration;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Store store = (Store) o;
    return Objects.equals(this.name, store.name) &&
        Objects.equals(this.location, store.location) &&
        Objects.equals(this.frequency, store.frequency) &&
        Objects.equals(this.potential, store.potential) &&
        Objects.equals(this.language, store.language) &&
        Objects.equals(this.duration, store.duration);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(name, location, frequency, potential, language, duration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Store {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    potential: ").append(toIndentedString(potential)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
